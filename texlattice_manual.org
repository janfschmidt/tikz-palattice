#+TITLE:     TeXlattice - draw accelerator lattices with LaTeX\\\textit{using pgf/tikz}
#+AUTHOR:    Jan Schmidt <schmidt@physik.uni-bonn.de>
#+LaTeX_HEADER: \usepackage{geometry}[scale=0.9]
#+LaTeX_CLASS_OPTIONS:[colorlinks]
\clearpage
* Installation
** Copy lattice.sty
You just need to copy the lattice.sty file to a place where your LaTeX installation can recognize it.
This can be
  - the same folder as your .tex document
  - in the LaTeX system or user tree
e.g. to add it to the system tree for texlive under ubuntu:
#+BEGIN_EXAMPLE
sudo mkdir -p /usr/local/share/texmf/tex/latex/lattice/
sudo cp lattice.sty /usr/local/share/texmf/tex/latex/lattice/
sudo mktexlsr (or sudo texhash)
#+END_EXAMPLE
For this path there is also a Makefile prepared, so just enter
#+BEGIN_EXAMPLE
sudo make install
#+END_EXAMPLE
Otherwise read the documentation of your LaTeX distribution.
** Required packages
  - tikz, pgf
  - siunitx
  - ifthen
  - xargs
* What is missing?
  - The look of the elements can definitely be improved. Feel free to do it! The only constraint is that it must be drawn as a tikz node.
  - More element types can be added easily - please report what you need!
* lattice environment
To draw a lattice just add
#+BEGIN_EXAMPLE
\usepackage{lattice}
#+END_EXAMPLEo
to your preambel and use the lattice environment.
the lattice environment has 2 optional arguments:
  1. \verb+[tikz options]+ give any options for the tikzpicture (e.g. overlay)
  2. \verb+[scale]+ scale whole picture (default: 1)
* Within lattice environment
** Elements
  - \verb+\drift{length/m}[name (default: none)]+
  - \verb+\dipole{name}{length/m}{bending angle/deg}[thickness/m (default 0.4)]+
  - \verb+\quadrupole{name}{length/m}[thickness/m (default 0.5)]+
  - \verb+\sextupole{name}{length/m}+
  - \verb+\kicker{name}{length/m}+
  - \verb+\cavity{name}{length/m}+
  - \verb+\solenoid{name}{length/m}[thickness/m (default 0.2)]+
  - \verb+\source{name}+
  - \verb+\screen{name}+
  - \verb+\valve{name}+
  - \verb+\marker{name}[length/m (default 0.35)]+ a line perpendicular to beamline of given length
** Modify your lattice/elements
  - \verb+\rotate{angle/deg}+ "bends" the beamline. e.g. to set starting angle
  - \verb+\start{coordinate/m}+ sets starting point of lattice. use before first element
    coordinate in form (x,y) or any tikz label, e.g. (mylabel.east)
    hint: use with \verb+\savecoordinate+ to connect lattices! (compile twice!)
  - \verb+\drawrule{start coordinate/m}[tick distance/m (default: 1)]+ a rule to visualize lattice size.
      coordinate in form (x,y) or any tikz label, e.g. (mylabel.east)
*** Labels
  - \verb+\shiftlabels+ moves labels to other side of elements (swap with marker labels)
  - \verb+\rotatelabels{angle/deg}[anchor (default: automatic)]+ allows rotation of element labels.
     the anchor sets the center of rotation (north, center, south west, ...). west corresponds to labels first character.
  - \verb+\setlabeldistance{distance/m}+ distance of text labels to element center (default is 0.35)
  - \verb+\resetlabeldistance+ reset label distance to previous value (e.g. useful for going back to your "global" but non-default setting)
  - \verb+\setlabelfont{fontsize}+ text label fontsize (default is \verb+\normalsize+)
*** Colors
  - \verb+\setdriftcolor{color (default black)}+ for all following drifts
  - \verb+\setmarkercolor{color (default red)}+ for all following markers
  - \verb+\setelementcolor{type}{color (default depends on type)}+ define color for one element-type
** Access lattice coordinates
   You can use element coordinates to draw anything you want using pgf/tikz. You can even connect lattices to draw injection/extraction or a complete accelerator facility.
  - \verb+\savecoordinate{name}[position (default: east)]+ saves coordinate of previous element
     to access it later.
    - position specifies the exact place of the element (north, center, south west, ...). Here east is always downstream and west upstream.
    - you can use all tikz/pgf commands within lattice environment to draw anything.
    - You can also connect multiple lattices. use tikz overlay option (1. argument of lattice) and \verb+\start+. See example 3.
    - ! DON'T use bare numbers as names (e.g. (1)) These are the internal element identifiers.
* Remarks
  - lengths are set in meter, so you write {1.32} for 1.32m.
  - beamline with angle 0 goes to the right, positive angles bend counter clockwise.
  - picture scale: for lattice scale=1 an element of 1m length is plotted with 2cm length
  - minimum element length 0.01m (drifts can be shorter)
  - maximum drift length <2.9m (just add a second drift to get a longer one)
  - maximum rule length < 3x29m
  - if you refer to a coordinate from another lattice (another tikzpicture) you have to compile twice
