% draw accelerator lattices
% with pgf/tikz
%
% by Jan Schmidt <schmidt@physik.uni-bonn.de>
%
% for manual see texlattice_manual.pdf (generated from texlattice_manual.org)
%


\RequirePackage{tikz,pgf}
\RequirePackage{ifthen}
\RequirePackage{siunitx}
\RequirePackage{xargs}
\usetikzlibrary{shapes,calc,positioning}
\usetikzlibrary{scopes}



%---lattice environment---
\newenvironmentx{lattice}[2][1=, 2=1]{%
%begin
\tikzpicture[node distance=0mm, remember picture, #1]
\newdimen\labeldist
\newdimen\savelabeldist
\newdimen\corners;
\newdimen\elementheight;
\newdimen\elementwidth;
\newdimen\markerlen;
\pgfmathsetmacro{\scal}{#2*0.1};
\def\labelfont{\normalsize};
\def\labelang{-90};
\def\marklabelang{+90};
\def\labelrot{0};
\newboolean{userlabelanchor}
\setboolean{userlabelanchor}{false}
\pgfmathsetlength{\labeldist}{\scal*20cm*0.35};
\pgfmathsetlength{\savelabeldist}{\scal*20cm*0.35};
\pgfmathtruncatemacro{\i}{0};
\pgfmathtruncatemacro{\j}{0};
\pgfmathsetmacro{\angle}{0};
\node (nodeeast0) [start] at (0,0) {};
\coordinate (east\j) at (nodeeast\j.center); %\declarecoords ("east" only
%for legend: does element occur?
\newboolean{dip} \setboolean{dip}{false}
\newboolean{quad} \setboolean{quad}{false}
\newboolean{sext} \setboolean{sext}{false}
\newboolean{kick} \setboolean{kick}{false}
\newboolean{sol} \setboolean{sol}{false}
\newboolean{cav} \setboolean{cav}{false}
\newboolean{sourc} \setboolean{sourc}{false}
\newboolean{scree} \setboolean{scree}{false}
}{%
%end
\endtikzpicture
}



%---general settings---
\newcommand{\rotate}[1]{\pgfmathsetmacro{\angle}{\angle+#1};}
\newcommand{\start}[1]{%
  \tikzset{x=2cm,y=2cm}
  \node (nodeeast0) [start] at #1 {};
  \coordinate (east\j) at (nodeeast\j.center);
  \tikzset{x=1cm,y=1cm}
}
\newcommandx{\savecoordinate}[2][2=east]{\coordinate (#1) at (#2\i);}
%\newcommandx{\savecoordinate}[2][2=east]{\coordinate (#1) at (\i.#2);}



%---color settings---
\newcommand{\setelementcolor}[2]{\tikzset{#1/.append style={bottom color=#2}}}
\newcommand{\setdriftcolor}[1]{\tikzset{drift/.append style={#1}}}
\newcommand{\setmarkercolor}[1]{\tikzset{marker/.append style={#1}}}

\newenvironmentx{fade}[1][1=0.25]{%
\tikzset{fade/.style={opacity=#1, color=gray}}
\tikzset{fadeElement/.style={opacity=#1, color=gray,bottom color=gray}}
}{%
\tikzset{fade/.style={opacity=1.0}}
\tikzset{fadeElement/.style={opacity=1.0}}
}


%---label settings---
\newenvironment{labeldistance}[1]{%
  \pgfmathsetlength{\savelabeldist}{\labeldist}
  \pgfmathsetlength{\labeldist}{\scal*20cm*#1};
}{%
  \pgfmathsetlength{\labeldist}{\savelabeldist};
}

\newcommand{\setlabelfont}[1]{\def\labelfont{#1}}

\newcommand{\turnlabels}{%
\ifthenelse{\labelang = -90}{%
\def\labelang{+90} \def\marklabelang{-90}}{%
\def\labelang{-90} \def\marklabelang{+90}}}

\newcommandx{\rotatelabels}[2][2=notset]{%
  \def\labelrot{#1}
  \ifthenelse{\equal{#2}{notset}}{%
    \setboolean{userlabelanchor}{false}
  }{%
    \setboolean{userlabelanchor}{true}
    \def\labelanchor{#2}}
}



% rule (maßstab)
\newcommandx{\drawrule}[2][2=1]{%
  \coordinate (rulestart) at ($(0,0)!\scal*20!#1$);
  \node (rule11) [rule,minimum width=#2*20cm] at (rulestart) {};
  \foreach \a in {2,3,...,10} {%
    \pgfmathtruncatemacro{\b}{\a-1}
    \node (rule1\a) [rule,minimum width=#2*20cm] at (rule1\b.east) {};
  }
  \node (rule21) [rule,fill=white,draw=none,minimum width=#2*20cm] at (rule110.east) {};
  \foreach \a in {2,3,...,10} {%
    \pgfmathtruncatemacro{\b}{\a-1}
    \node (rule2\a) [rule,fill=white,draw=none,minimum width=#2*20cm] at (rule2\b.east) {};
  }
  \node (rule31) [rule,minimum width=#2*20cm] at (rule210.east) {};
  \foreach \a in {2,3,...,10} {%
    \pgfmathtruncatemacro{\b}{\a-1}
    \node (rule3\a) [rule,minimum width=#2*20cm] at (rule3\b.east) {};
  }
  \draw [black] (rule11.south west) -- (rule310.south east);
  \draw [black] (rule11.north west) -- (rule310.north east);
  \draw [black, thick] (rule11.west) --+ (-90:1mm); % half length
  \draw [black, thick] (rule11.west) --+ (90:1mm);
  \foreach \x in {1,2,3} {%
    \pgfmathsetmacro{\len}{#2*\x}
    \path [draw=none] (rule\x10.south east) --+ (-90:0.06*\labeldist/\scal) node[label, anchor=center]
    {\SI[zero-decimal-to-integer]{\len}{\meter}};
    \draw [black,thick] (rule\x10.east) --+ (-90:1mm); % half length
    \draw [black,thick] (rule\x10.east) --+ (90:1mm);
  }
}



%legend (types that occured in the lattice before this command)
\newcommandx{\legend}[2][2=1]{%
\coordinate (legendstart) at ($(0,0)!\scal*20!#1$);
\pgfmathsetmacro{\savescal}{\scal};
\pgfmathsetmacro{\saveang}{\angle};
\pgfmathsetmacro{\scal}{0.05};
\pgfmathsetmacro{\angle}{0};
\pgfmathsetlength{\elementheight}{0.3*20cm};
\pgfmathsetlength{\elementwidth}{0.4*20cm};
\def\labelanchor{west};
\matrix[draw=black,anchor=north west] at (legendstart) {
  \ifthenelse{\boolean{dip}}{\legendentry{element,dipole}{Dipole}{#2}}{}
  \ifthenelse{\boolean{quad}}{\legendentry{quadrupole}{Quadrupole}{#2}}{}
  \ifthenelse{\boolean{sext}}{\legendentry{sextupole}{Sextupole}{#2}}{}
  \ifthenelse{\boolean{kick}}{\legendentry{kicker}{Kicker}{#2}}{}
  \ifthenelse{\boolean{cav}}{\legendentry{cavity}{Cavity}{#2}}{}
  \ifthenelse{\boolean{sol}}{\legendentry{solenoid}{Solenoid}{#2}}{}
  \ifthenelse{\boolean{sourc}}{\legendentry{source}{Source}{#2}}{}
  \ifthenelse{\boolean{scree}}{\legendentry{screen}{Screen}{#2}}{}
  \node [drift,minimum width=4*20cm,scale=#2] {}; \pgfmatrixnextcell \node[label,scale=#2] {Drift};\\[2pt]
};
\pgfmathsetmacro{\scal}{\savescal};
\pgfmathsetmacro{\angle}{\saveang};
}

%complete legend (all types)
\newcommandx{\completelegend}[2][2=1]{%
 \setboolean{dip}{true}
 \setboolean{quad}{true}
 \setboolean{sext}{true}
 \setboolean{kick}{true}
 \setboolean{sol}{true}
 \setboolean{cav}{true}
 \setboolean{sourc}{true}
 \setboolean{scree}{true}
 \legend{#1}[#2]
}


%---commands for internal use---
\newcommand{\legendentry}[3]{\node [#1,minimum width=2cm,scale=#3] {}; \pgfmatrixnextcell
  \node[label,scale=#3] {#2};\\[2pt]}

\newcommand{\updatelabelanchor}{%
  \pgfmathtruncatemacro\iang{\angle}
  % handle angle not in [0,360] ([-720,+1080] handled)
  \ifthenelse{\iang<0}{\pgfmathtruncatemacro\iang{\iang+360}}{}
  \ifthenelse{\iang<0}{\pgfmathtruncatemacro\iang{\iang+360}}{}
  \ifthenelse{\iang>360}{\pgfmathtruncatemacro\iang{\iang-360}}{}
  \ifthenelse{\iang>360}{\pgfmathtruncatemacro\iang{\iang-360}}{}
  % set label anchor according to angle
  \ifthenelse{\boolean{userlabelanchor}}{}{%  %if labelanchor is set by user just use the set value
    \ifthenelse{\labelang = -90}{%
      \def\labelanchor{north};
      \ifthenelse{\iang > 30}{\def\labelanchor{west}}{}
      \ifthenelse{\iang > 150}{\def\labelanchor{south}}{}
      \ifthenelse{\iang > 210}{\def\labelanchor{east}}{}
      \ifthenelse{\iang > 330}{\def\labelanchor{north}}{}
    }{%
      \def\labelanchor{south};
      \ifthenelse{\iang > 30}{\def\labelanchor{east}}{}
      \ifthenelse{\iang > 150}{\def\labelanchor{north}}{}
      \ifthenelse{\iang > 210}{\def\labelanchor{west}}{}
      \ifthenelse{\iang > 330}{\def\labelanchor{south}}{}
    }
  }
}

\newcommand{\updatemarkerlabelanchor}{%
  \pgfmathtruncatemacro\iang{\angle}
  % handle angle not in [0,360] ([-720,+1080] handled)
  \ifthenelse{\iang<0}{\pgfmathtruncatemacro\iang{\iang+360}}{}
  \ifthenelse{\iang<0}{\pgfmathtruncatemacro\iang{\iang+360}}{}
  \ifthenelse{\iang>360}{\pgfmathtruncatemacro\iang{\iang-360}}{}
  \ifthenelse{\iang>360}{\pgfmathtruncatemacro\iang{\iang-360}}{}
  % set label anchor according to angle
  \ifthenelse{\marklabelang = +90}{%
    \def\labelanchor{south};
    \ifthenelse{\iang > 30}{\def\labelanchor{east}}{}
    \ifthenelse{\iang > 150}{\def\labelanchor{north}}{}
    \ifthenelse{\iang > 210}{\def\labelanchor{west}}{}
    \ifthenelse{\iang > 330}{\def\labelanchor{south}}{}
  }{%
    \def\labelanchor{north};
    \ifthenelse{\iang > 30}{\def\labelanchor{west}}{}
    \ifthenelse{\iang > 150}{\def\labelanchor{south}}{}
    \ifthenelse{\iang > 210}{\def\labelanchor{east}}{}
    \ifthenelse{\iang > 330}{\def\labelanchor{north}}{}
  }
}


\newcommand{\elementlabel}[1]{%
  \updatelabelanchor
  \path [draw=none] (center\j) --+ (\angle\labelang:\labeldist) node[label] {#1};
}

\newcommand{\jinc}{\pgfmathparse{int(\i+1)} \global\let\j\pgfmathresult}
\newcommand{\iinc}{\global\let\i\j}
\newcommand{\angleinc}[1]{\pgfmathparse{\angle+#1} \global\let\angle\pgfmathresult}
\newcommand{\declarecoords}{\coordinate (east\j) at (nodeeast\j.center); \coordinate (center\j) at (nodecenter\j.center);}





% ----- element commands -----
% drift
\newcommandx{\drift}[2][2=]{%
\jinc
\draw[drift] (east\i) --++ (\angle:#1*10cm*\scal) node[] (nodecenter\j) {} --++
(\angle:#1*10cm*\scal) node[] (nodeeast\j) {};
\declarecoords
\elementlabel{#2};
\iinc;
}

%dipole (br,r,s)
\newcommandx{\dipole}[5][4=s, 5=0.4]{%
\jinc
\pgfmathsetlength{\corners}{(#2)>=0.4 ? (1mm*10*\scal) : 0mm};
\pgfmathsetlength{\elementheight}{#5*20cm*\scal};
\def\winkel{#3}
\newdimen\radius
\newdimen\ri
\newdimen\ra
\pgfmathsetlength{\radius}{(#2*20cm*\scal)/rad(\winkel)}; % bogenlänge
\pgfmathsetlength{\ri}{\radius-0.5*\elementheight}
\pgfmathsetlength{\ra}{\radius+0.5*\elementheight}

\draw[drift,rotate=\angle] (east\i) arc (-90:(-90+\winkel/2):\radius) node[] (nodecenter\j) {};
\draw[drift,rotate=\angle] (nodecenter\j) arc ((-90+\winkel/2):(-90+\winkel):\radius) node[] (nodeeast\j) {};

\angleinc{0.5*#3}
% [r]ectangle
\ifthenelse{\equal{#4}{r}}{
\newdimen\straightlength
\pgfmathsetlength{\straightlength}{sin(\winkel/2)*2*\radius} % sekante des kreisbogens
  \draw[dipole,rotate=\angle] (east\i) --++ (0,-\elementheight/2) --++ (\straightlength,0) --++
  (0,\elementheight) --++ (-\straightlength,0) --++ (0,-\elementheight/2);
}{
% [s]ector
  \ifthenelse{\equal{#4}{s}}{%
    \draw[dipole, rotate=\angle-0.5*\winkel] (east\i) -- ++
    (0,-\elementheight/2) arc (-90:(-90+\winkel):\ra) -- ++(\winkel+90:\elementheight) arc
    ((-90+\winkel):-90:\ri) --++ (0,-\elementheight);
  }{
 % [b]end[r]ectangle
    \draw[dipole, rotate=\angle] (east\i) -- ++
    (0,-\elementheight/2) arc (-90-\winkel/2:-90+\winkel/2:\radius) -- ++(0,\elementheight) arc
    (-90+\winkel/2:-90-\winkel/2:\radius) -- cycle;
  }
}
\declarecoords
\elementlabel{#1};
\iinc
\setboolean{dip}{true}
\angleinc{0.5*#3}
}

%rectangle-element (used for quad,sext,kicker,cavity,...)
\newcommandx{\rectangleelement}[4]{%
\pgfmathsetlength{\corners}{(#2)>=0.4 ? (1mm*10*\scal) : 0mm};
\pgfmathsetlength{\elementheight}{#3*20cm*\scal};
\draw[drift] (east\i) --++ (\angle:#2*10cm*\scal) node[] (nodecenter\j) {} --++
(\angle:#2*10cm*\scal) node[] (nodeeast\j) {};
\draw[#4] (east\i) --++ (0,\elementheight/2) --++ (#2*20cm*\scal,0) --++
(0,-\elementheight) --++ (-#2*20cm*\scal,0) --++ (0,\elementheight/2);
}

%quadrupole
\newcommandx{\quadrupole}[3][3=0.5]{%
\jinc
\rectangleelement{#1}{#2}{#3}{quadrupole}
\declarecoords
\elementlabel{#1}
\iinc
\setboolean{quad}{true}
}

%sextupole
\newcommandx{\sextupole}[3][3=0.3]{%
\jinc
\rectangleelement{#1}{#2}{#3}{sextupole}
\declarecoords
\elementlabel{#1}
\iinc
\setboolean{sext}{true}
}

%kicker
\newcommandx{\kicker}[3][3=0.25]{%
\jinc
\rectangleelement{#1}{#2}{#3}{kicker}
\declarecoords
\elementlabel{#1}
\iinc
\setboolean{kick}{true}
}

%cavity
\newcommandx{\cavity}[3][3=0.45]{%
\jinc
\rectangleelement{#1}{#2}{#3}{cavity}
\declarecoords
\elementlabel{#1}
\iinc
\setboolean{cav}{true}
}

%solenoid
\newcommandx{\solenoid}[3][3=0.2]{%
\jinc
\pgfmathsetlength{\corners}{(#2)>=0.4 ? (1mm*10*\scal) : 0mm};
\pgfmathsetlength{\elementheight}{#3*20cm};
\node (node\j) [solenoid, minimum width=#2*20cm] at (east\i) {};
\declarecoords
\elementlabel{#1};
\iinc
\setboolean{sol}{true}
}

%source
\newcommand{\source}[1]{%
\jinc
\pgfmathsetlength{\corners}{1mm};
\node (node\j) [source, minimum width=10cm] at (east\i) {};
\declarecoords
\elementlabel{#1};
\iinc
\setboolean{sourc}{true}
}

%screen
\newcommand{\screen}[1]{%
\jinc
\pgfmathsetlength{\corners}{0mm};
\node (node\j) [screen, minimum width=4cm] at (east\i) {};
\declarecoords
\elementlabel{#1};
\iinc
\setboolean{scree}{true}
}

%valve
\newcommand{\valve}[1]{%
\updatemarkerlabelanchor
\draw [valve] (east\i) --+ (\angle-90:1.4cm*\scal); % half length (=> 10cm)
\draw [valve] (east\i) --+ (\angle+90:1.4cm*\scal);
\draw [draw=none] (east\i) --+ (\angle\marklabelang:\labeldist) node[label] {#1};
}


%marker
\newcommandx{\marker}[2][2=0.35]{%
\pgfmathsetlength{\markerlen}{#2*20cm*\scal};
\updatemarkerlabelanchor
\draw [marker] (east\i) --+ (\angle-90:\markerlen); % half length (=> 10cm)
\draw [marker] (east\i) --+ (\angle+90:\markerlen);
\draw [draw=none] (east\i) --+ (\angle\marklabelang:\markerlen+0.5*\labeldist) node[label] {#1};
}



% ----- styles -----
%fade (for global fade setting)
\tikzset{fade/.style={
opacity=1
}}
\tikzset{fadeElement/.style={
opacity=1
}}

%element (for all, except drift)
\tikzset{element/.style={
rounded corners=\corners,
line width=0.8pt*10*\scal, draw=black,
top color=white,
anchor=west,
rotate=\angle,
fadeElement  %must be last to overwrite other settings
}}

%dipole
\tikzset{dipole/.style={
rounded corners=\corners,
line width=0.8pt*10*\scal, draw=black,
top color=white,
bottom color=blue,
fadeElement
}}

%quadrupole
\tikzset{quadrupole/.style={
bottom color=yellow, 
element %must be last to overwrite other settings
}}

%sextupole
\tikzset{sextupole/.style={
bottom color=violet!70!black, 
element %must be last to overwrite other settings
}}

%kicker
\tikzset{kicker/.style={
bottom color=orange!90!black, 
element %must be last to overwrite other settings
}}

%cavity
\tikzset{cavity/.style={
bottom color=brown, 
element %must be last to overwrite other settings
}}

%solenoid
\tikzset{solenoid/.style={
bottom color=green!70!black, 
element %must be last to overwrite other settings
}}

%source
\tikzset{source/.style={
%regular polygon,regular polygon sides=3, shape border rotate=30,
bottom color=gray, 
element %must be last to overwrite other settings
}}

%screen
\tikzset{screen/.style={
forbidden sign,
bottom color=white, 
element %must be last to overwrite other settings
}}

%valve
\tikzset{valve/.style={
gray, ultra thick,
rotate=\labelrot,
fade  %must be last to overwrite other settings
}}



%drift
\tikzset{drift/.style={
line width=0.8pt*10*\scal, draw=black,
fade  %must be last to overwrite other settings
}}

%text label
\tikzset{label/.style={
text=black,
font=\labelfont,
rotate=\labelrot,
anchor=\labelanchor,
fade  %must be last to overwrite other settings
}}

%marker (line)
\tikzset{marker/.style={
red, densely dashed,
rotate=\labelrot,
fade  %must be last to overwrite other settings
}}

%rule
\tikzset{rule/.style={
scale=0.1*\scal,
rectangle, draw=black,
fill=black,
anchor=west,
minimum height=6cm/(10*\scal),
fade  %must be last to overwrite other settings
}}

%start
\tikzset{start/.style={%
draw=none,
anchor=center,
scale=0.1,
fade  %must be last to overwrite other settings
}}
