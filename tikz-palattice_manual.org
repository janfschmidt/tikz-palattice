#+TITLE:     tikz-palattice - draw particle accelerator lattices with TikZ
#+AUTHOR:    Jan Schmidt <schmidt@physik.uni-bonn.de>
#+DATE:      v2.1 (\today)
#+LaTeX_HEADER: \usepackage{geometry}[scale=0.9]
#+LaTeX_CLASS_OPTIONS:[colorlinks]
[[file:elsa.pdf][The Electron Stretcher Facility ELSA at Bonn University - drawn with tikz-palattice]]
\clearpage
* Installation
** Copy lattice.sty
You just need to copy the lattice.sty file to a place where your LaTeX installation can recognize it.
This can be
  - the same folder as your .tex document
  - in the LaTeX system or user tree
e.g. to add it to the system tree for texlive under ubuntu:
#+BEGIN_EXAMPLE
sudo mkdir -p /usr/local/share/texmf/tex/latex/lattice/
sudo cp lattice.sty /usr/local/share/texmf/tex/latex/lattice/
sudo mktexlsr (or sudo texhash)
#+END_EXAMPLE
For this path there is also a Makefile prepared, so just enter
#+BEGIN_EXAMPLE
sudo make install
#+END_EXAMPLE
Otherwise read the documentation of your LaTeX distribution.
** Required packages
  - tikz, pgf
  - siunitx
  - ifthen
  - xargs
* What is missing?
  - manually adding (and maybe changing?) legend entries
  - The look of the elements can be improved
  - More element types can be added
  - ...
* Known issues
  - no error handling implemented
  - no dedicated scoping of internal macros (use of lattice with documentclass standalone recommended)
  - please report bugs...
* lattice environment
To draw a lattice just add
#+BEGIN_EXAMPLE
\usepackage{lattice}
#+END_EXAMPLE
to your preambel and use the lattice environment.
the lattice environment has 2 optional arguments:
  1. \verb+[tikz options]+ give any options for the tikzpicture (e.g. overlay)
  2. \verb+[scale]+ scale whole picture (default: 1)
* Within lattice environment
** Elements
  - \verb+\drift{length/m}[name (default: none)]+
  - \verb+\dipole{name}{arc length/m}{bending angle/deg}[type (default: s)][thickness/m (default 0.6)]+
    the \verb+type+ option allows to select different dipole shapes. It can be:
    - br for a bend rectangle magnet (parallel entrance/exit surfaces)
    - r for a rectangle magnet
    - s for a sector magnet (entrance/exit surface 90 degree to beampipe)
    If you use any other letters, also the default (s) is used.
  - \verb+\quadrupole{name}{length/m}[thickness/m (default 0.5)]+
  - \verb+\sextupole{name}{length/m}[thickness/m (default 0.3)]+
  - \verb+\corrector{name}{length/m}[thickness/m (default 0.25)]+
  - \verb+\kicker{name}{length/m}[thickness/m (default 0.25)]+
  - \verb+\cavity{name}{length/m}[thickness/m (default 0.45)]+
  - \verb+\solenoid{name}{length/m}[thickness/m (default 0.2)]+
  - \verb+\beamdump{name}{length/m}[thickness/m (default 0.5)]+
  - \verb+\source{name}{length/m}[thickness/m (default 0.5)]+
  - \verb+\screen{name}[length/m (default 0.2)]+
  - \verb+\valve{name}+
  - \verb+\marker{name}[length/m (default 0.35)]+ a line perpendicular to beamline of given length
** Modify your lattice/elements
  - \verb+\rotate{angle/deg}+ "bends" the beamline., offset from current angle
  - \verb+\setangle{angle/deg}+ "bends" the beamline., set absolute angle
  - \verb+\goto{coordinate name}+ sets current position and angle to values saved with \verb+\savecoordinate+
    hint: e.g. use to draw injection/extraction
  - \verb+\start{coordinate/m}+ sets starting point of lattice. use before first element
    coordinate in form (x,y) or any tikz label, e.g. (mylabel.east)
    hint: use with \verb+\savecoordinate+ to connect lattices! (compile twice!)
  - \verb+\drawrule{position/m}[tick distance/m (default: 1)]+...\\ \verb+[scale (default: 1)][height/m (default:0.1)]+\\  a rule to visualize lattice size. coordinate in form (x,y) or any tikz label, e.g. (mylabel.east)
  - \verb+\legend{position/m}[scale (default: 1)]+ a legend with all element types that occur in the lattice before this command.
    position is north west (upper left corner) of the legend box.
    the scale option scales the whole box including the text, which has the usual label textsize for scale=1
  - \verb+\completelegend{position/m}[scale (default: 1)]+ similar to \verb+\legend+, but shows all existing element types.
*** Labels
  - \verb+\turnlabels+ moves labels to other side of elements (swap with marker labels)
  - \verb+\rotatelabels{angle/deg}[anchor (default: automatic)]+ allows rotation of element labels.
     the anchor sets the center of rotation (north, center, south west, ...). west corresponds to labels first character.
  - environment \texttt{labeldistance\{distance/m\}} sets distance of text labels to element center for all elements within this environment (default is 0.35)
  - \verb+\setlabeldistance{fontsize}+ sets distance of text labels to element center for following elements (default is 0.35)
  - \verb+\resetlabeldistance{fontsize}+ resets distance of text labels to element center for following elements to default 0.35
  - \verb+\setlabelfont{fontsize}+ text label fontsize (default is \verb+\normalsize+)
*** Colors
The color can be changed at any point in the lattice. A setting is valid until the next color setting comand.
  - \verb+\setlabelcolor{color}+ for textlabels (set to white to hide labels).
  - \verb+\setlinecolor{type}{color}+ for type drift and marker.
  - \verb+\setelementcolor{type}{color}[gradient color (default: white)]+ for all element types. set gradient color = color to "disable" gradient
  - \verb+\resetlinecolor{type}+ reset to default color.
  - \verb+\resetelementcolor{type}+ reset to default color.
  - environment \verb+\begin{fade}[opacity (default: 0.25)]+ sets the opacity of all elements within the environment to fade out regions of the lattice - e.g. for presentations. Also sets all colors to gray.
    This can also be used to completely hide regions by setting opacity to zero.
** Access lattice coordinates
   You can use element coordinates to draw anything you want using pgf/tikz. You can even connect lattices to draw injection/extraction or a complete accelerator facility.
  - \verb+\savecoordinate{name}[position (default: east)]+ saves coordinate of previous element
     to access it later.
    - position specifies the exact place of the element. East (default) and center are available. East is always downstream.
    - you can use all tikz/pgf commands within lattice environment to draw anything.
    - You can use this to connect multiple beamlines within a lattice environment with \verb+\goto{name}+
    - You can use this to connect multiple lattices with \verb+\start{name}+. use tikz overlay option (1. argument of lattice)
    - see example 3
* Remarks
  - lengths are set in meter, so you write {1.32} for 1.32m.
  - beamline with angle 0 goes to the right, positive angles bend counter clockwise.
  - settings (colors, font, rotatelabel,...) changed within a \verb+scope+ environment are set back to the previous values outside of \verb+scope+
  - picture scale: for lattice scale=1 an element of 1m length is plotted with 2cm length
  - if you refer to a coordinate from another lattice (another tikzpicture) you have to compile twice
